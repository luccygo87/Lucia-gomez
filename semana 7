using System;
using System.Collections.Generic;

class Program
{
    static void Main()
    {
        string expression = "{7 + (8 * 5) - [(9 - 7) + (4 + 1)]}";
        if (AreParenthesesBalanced(expression))
        {
            Console.WriteLine("Fórmula balanceada.");
        }
        else
        {
            Console.WriteLine("Fórmula no balanceada.");
        }
    }

    static bool AreParenthesesBalanced(string expression)
    {
        Stack<char> stack = new Stack<char>();

        foreach (char ch in expression)
        {
            if (ch == '{' || ch == '[' || ch == '(')
            {
                stack.Push(ch);
            }
            else if (ch == '}' || ch == ']' || ch == ')')
            {
                if (stack.Count == 0)
                {
                    return false;
                }

                char top = stack.Pop();
                if ((ch == '}' && top != '{') ||
                    (ch == ']' && top != '[') ||
                    (ch == ')' && top != '('))
                {
                    return false;
                }
            }
        }

        return stack.Count == 0;
    }
}

using System;
using System.Collections.Generic;

class Program
{
    static void Main()
    {
        int n = 3; // Número de discos
        char source = 'A';
        char auxiliary = 'B';
        char target = 'C';

        Console.WriteLine($"Movimientos para resolver las Torres de Hanoi con {n} discos:");
        HanoiTowers(n, source, auxiliary, target);
    }

    static void HanoiTowers(int n, char source, char auxiliary, char target)
    {
        if (n == 1)
        {
            Console.WriteLine($"Mover disco 1 de {source} a {target}");
            return;
        }

        HanoiTowers(n - 1, source, target, auxiliary);
        Console.WriteLine($"Mover disco {n} de {source} a {target}");
        HanoiTowers(n - 1, auxiliary, source, target);
    }
}
